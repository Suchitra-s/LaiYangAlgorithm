<Window x:Class="LaiYang_Algorithm.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LaiYang_Algorithm"
        mc:Ignorable="d"
        Title="MainWindow" WindowState="Maximized" Background="#30302f" Foreground="#f0f0e9" >
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="12*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TextBlock Text="Lai-Yang Algorithm" Grid.ColumnSpan="2" FontSize="25" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
        <TextBlock Grid.Row="1" Text="Assumption : Two Processes P1 and P2 are communicating." VerticalAlignment="Center"></TextBlock>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="Initial Value P1" Margin="10" Grid.Row="0" Grid.Column="0"/>
            <TextBox x:Name="p1Initial" Width="100" Height="20" Margin="10" Grid.Row="0" Grid.Column="1"/>
            <TextBlock Text="Initial Value P2" Margin="10" Grid.Row="1" Grid.Column="0"/>
            <TextBox x:Name="p2Initial" Width="100" Height="20" Margin="10" Grid.Row="1" Grid.Column="1"/>
            <TextBlock Text="Total Time slots" Margin="10" Grid.Row="2" Grid.Column="0"/>
            <TextBox x:Name="totalTimeSlots" Width="100" Height="20" Margin="10" Grid.Row="2" Grid.Column="1"/>
            <TextBlock Text="Red Initiator Process" Margin="10" Grid.Row="3" Grid.Column="0"/>
            <TextBox x:Name="redProcessId" Width="100" Height="20" Margin="10" Grid.Row="3" Grid.Column="1"/>
            <TextBlock Text="Red Initiator Time" Margin="10" Grid.Row="4" Grid.Column="0"/>
            <TextBox x:Name="redTime" Width="100" Height="20" Margin="10" Grid.Row="4" Grid.Column="1"/>
        </Grid>
        <StackPanel Grid.Row="3" Orientation="Vertical">
            <TextBlock Margin="10" Text="Click on Add to add messages. Please Enter: Sending ProcessId, Receiving ProcessId, Sending Time, Receiving Time, Value." TextWrapping="Wrap"/>
            <TextBlock Margin="10,0,10,0" Text="Note: All values have to be integers" FontWeight="Bold"/>
            <Button Content="Add Message" x:Name="btnAddMessage" Click="btnAddMessage_Click" Width="100" HorizontalAlignment="Left" Margin="10"/>
            <Grid x:Name="messageGrid" Visibility="Hidden" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="From Process Id" Margin="10" Grid.Row="0" Grid.Column="0"/>
                <TextBox x:Name="fromPId" Width="100" Height="20" Margin="10" Grid.Row="0" Grid.Column="1"/>
                <TextBlock Text="To Process Id" Margin="10" Grid.Row="1" Grid.Column="0"/>
                <TextBox x:Name="toPId" Width="100" Height="20" Margin="10" Grid.Row="1" Grid.Column="1"/>
                <TextBlock Text="Sending Timeslot" Margin="10" Grid.Row="2" Grid.Column="0"/>
                <TextBox x:Name="sendTime" Width="100" Height="20" Margin="10" Grid.Row="2" Grid.Column="1"/>
                <TextBlock Text="Receiving Timeslot" Margin="10" Grid.Row="3" Grid.Column="0"/>
                <TextBox x:Name="receiveTime" Width="100" Height="20" Margin="10" Grid.Row="3" Grid.Column="1"/>
                <TextBlock Text="Value" Margin="10" Grid.Row="4" Grid.Column="0"/>
                <TextBox x:Name="value" Width="100" Height="20" Margin="10" Grid.Row="4" Grid.Column="1"/>
                <Button Content="Add" Click="btnAdd_Click" x:Name="btnAdd" Width="100" HorizontalAlignment="Left" Margin="10" Grid.Row="5"/>
            </Grid>
        </StackPanel>
        <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="1" Grid.RowSpan="3">
            <DataGrid Background="Transparent" BorderThickness="1" 
                  HorizontalAlignment="Stretch" ItemsSource="{Binding MessageToSend}" IsReadOnly="True" CanUserAddRows="True" Height="164" Margin="10" Grid.Row="2" VerticalAlignment="Stretch">
            </DataGrid>
            <Button Content="Calculate" Click="btnCalculate_Click" x:Name="btnCalculate" Width="100" HorizontalAlignment="Left" Margin="10"/>
            <Border BorderThickness="2" BorderBrush="White" Padding="5">
                <Grid x:Name="results" Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Margin="5" Text="Local State of P1 - " FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Grid.Column="1" x:Name="p1State" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Text="Local State of P2 - " Grid.Row="1" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Grid.Column="1" x:Name="p2State" Grid.Row="1" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Text="Channel C12 Sent - " Grid.Row="2" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Grid.Column="1" x:Name="c12Sent" Grid.Row="2" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Text="Channel C12 Received - " Grid.Row="3" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Grid.Column="1" x:Name="c12Received" Grid.Row="3" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Text="Channel C21 Sent - " Grid.Row="4" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Grid.Column="1" x:Name="c21Sent" Grid.Row="4" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Text="Channel C21 Received - " Grid.Row="5" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Grid.Column="1" x:Name="c21Received" Grid.Row="5" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Text="After Calculating total of Local State + (C12 Sent - C21 Received) + (C21 Sent - C12 Received) = " Grid.Row="6" Grid.ColumnSpan="2" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Grid.Column="1" x:Name="total" Grid.Row="7" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Margin="5" Grid.ColumnSpan="2" Text="This is same as Initial Value. Hence, This is Consistent Global State" Grid.Row="8" FontWeight="Bold" FontSize="12"/>

                </Grid>
            </Border>
        </StackPanel>
    </Grid>
</Window>
